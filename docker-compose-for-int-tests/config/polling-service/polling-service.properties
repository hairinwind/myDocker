server.port=9091

# DB connection details
spring.datasource.url=jdbc:sqlserver://VHD1PAYMNT:60008;databaseName=DECM
spring.datasource.username=casuser
spring.datasource.password=5tgbVFR$#@
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.main.allow-bean-definition-overriding=true


# DECM Stored Procs configuration
decm.db.check.capacity.stored.procedure.force.check=3
decm.db.check.capacity.response.invoke.check.rules=1
decm.db.check.capacity.stored.procedure.name=usp_check_capacity
decm.db.check.alert.stored.procedure.name=usp_check_rules

decm.db.eod.sync.accounts.procedure.name=usp_synch_accounts
decm.db.eod.sync.account.balance.procedure.name=usp_synch_balances
decm.db.eod.reset.alerts.procedure.name=usp_reset_alerts
decm.db.eod.check.overdraft.procedure.name=usp_check_OD
decm.db.eod.run.report.procedure.name=usp_check_if2run
decm.db.eod.reset.nbd.procedure.name=usp_reset_nbd

decm.init.table.eod.overdraft.report.email.attribute=ADDR_EMAIL
decm.init.table.eod.overdraft.report.email.subject.attribute=EMAIL-SUBJ-LINE
decm.init.table.eod.overdraft.report.attribute.name=OD-REPORT
decm.init.table.effective.date.attribute=DATE_PROC

# Email Sender details
decm.email.host=mailhost.central1.com
decm.email.port=25
decm.email.protocol=smtp
decm.email.smtp.auth=false
decm.email.starttls.enable=false

async.thread.pool.coreSize=5
async.thread.pool.maxSize=10
async.thread.pool.queueCapacity=1000

zenoss.url=https://central1.saas.zenoss.com/zport/dmd/evconsole_router
zenoss.username=zenossAPIuser
zenoss.password=1L#k7Jj#kJ6(

#ZENOSS Device setting
decm.zenoss.device.name=CAS
decm.zenoss.event.class=/C1/CAS

# EOD polling configuration
inbound.jdbc.eod.poller.fixed.delay=300000
inbound.jdbc.txn.sql.select.eod.query=SELECT ATTR_DOMAIN,ATTR_NAME,ATTR_TYPE,ATTR_VALUE FROM DECM_INIT WHERE ATTR_DOMAIN='DATE_PROC'

#Cache Refresh
cache.refresh.url=http://localhost:9080/refreshAllCaches

#disable error page
server.error.whitelabel.enabled=false

# LOG_EVENTS polling configuration with a delay of 1 hour
logEvents.jdbc.poller.scheduled.delay.ms=3600000
logEvents.severity=FATAL
logEvents.jdbc.poller.max.messages.per.poll=1000

# Alerts configs
# polling of alerts-queue table every 10 minutes
alerts.jdbc.poller.scheduled.delay.ms=600000
alerts.jdbc.poller.max.messages.per.poll=1000

# The property "alerts.poller.status" controls the alerts polling mecchanism; possible values are:
#    stop()
#    start()
alerts.poller.status=start()

# The property "logEvents.poller.status" controls the logEvents polling mecchanism; possible values are:
#    stop()
#    start()
logEvents.poller.status=start()

# The property "eod.poller.status" controls the End of Day polling mecchanism; possible values are: "start()" and "stop()"
eod.poller.status=start()

decm-init.alert.alerts-send.domain=ALERTS-SEND
decm-init.alert.email-templ.domain=TEMPL-EMAIL
decm-init.alert.email-subj.domain=EMAIL-SUBJ-LINE

decm-init.alert.alerts-channel.domain=ALERTS_CHANNEL
decm-init.alert.alerts-channel.email.name=EMAIL
decm-init.alert.alerts-channel.servicenow.name=SERVICENOW

#ServiceNow Login details
servicenow.url=https://central1dev.service-now.com/api/x_ce1cu_cas_decm/cas_decm
servicenow.username=servicedecm
servicenow.password=Sdecm@C1

alert.email.date.pattern=dd/MM/yyyy
alert.email.time.pattern=h:mm a

#ENABLE this property for performance timing.
#logging.level.org.springframework.aop.interceptor.PerformanceMonitorInterceptor=TRACE

#Acuator Health Check
management.endpoints.web.exposure.include=health,metrics,caches,info,scheduledtasks
management.endpoint.health.show-details=always
endpoints.health.sensitive=false
info.app.name=Decm Polling App
info.app.description=Decm Polling App manages polling capabilities for Alerts, EOD, LogEvents.
info.app.version=1.0.0